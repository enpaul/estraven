[tox]
envlist = py36, py37, py38, py39, static, static-tests, security
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = Run the tests
require_locked_deps = true
require_poetry = true
locked_deps =
    pytest
    pytest-cov
    toml
commands =
    pytest --cov {toxinidir}/genly --cov-config {toxinidir}/.coveragerc --cov-report term-missing {toxinidir}/tests/

[testenv:static]
description = Static formatting and quality enforcement
basepython = python3.8
platform = linux
ignore_errors = true
locked_deps =
    black
    blacken-docs
    mdformat
    mdformat-gfm
    mypy
    reorder-python-imports
    pre-commit
    pre-commit-hooks
    pylint
commands =
    pre-commit run --all-files
    pylint --rcfile {toxinidir}/.pylintrc {toxinidir}/genly/
    mypy --ignore-missing-imports --no-strict-optional {toxinidir}/genly/

[testenv:static-tests]
description = Static formatting and quality enforcement for the tests
basepython = python3.8
platform = linux
ignore_errors = true
locked_deps =
    pylint
    pytest
    mypy
commands =
    pylint --rcfile {toxinidir}/.pylintrc {toxinidir}/tests/
    mypy --ignore-missing-imports --no-strict-optional {toxinidir}/tests/

[testenv:security]
description = Security checks
basepython = python3.8
platform = linux
ignore_errors = true
locked_deps =
    bandit
    safety
    poetry
commands =
    bandit --recursive --quiet {toxinidir}/genly/
    bandit --recursive --quiet --skip B101 {toxinidir}/tests/
    poetry export --format requirements.txt --output {envtmpdir}/requirements.txt --without-hashes --dev
    safety check --bare --file {envtmpdir}/requirements.txt
